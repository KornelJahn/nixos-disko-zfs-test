#!/usr/bin/env bash

set -euo pipefail

usage="usage: $(basename "$0") [-h] [-a <hash-algo>] [-p <explicit-password>] "
usage+='-o <output-file>'

parsed="$(getopt -o ha:o:p: -l help,algo:,output:,password: -n "$0" -- "$@")"
eval set -- "$parsed"

algo=''
output=''
password=''

while true; do
  case $1 in
    -h|--help)
      echo "$usage"
      exit 0
      ;;
    -a|--algo)
      algo="$2"
      shift 2
      ;;
    -o|--output)
      output="$2"
      shift 2
      ;;
    -p|--password)
      password="$2"
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *)
      fail "internal error"
      ;;
  esac
done

: "${output:?Missing -o}"

message="password ($output)"
verification="${password:-different}"

while [[ $password != "$verification" ]]; do
  echo >&2
  IFS= read -rsp "Enter $message: " password
  echo >&2
  IFS= read -rsp "Repeat $message: " verification
  echo >&2
done

if [[ -z $algo ]]; then
  hashfunc='cat'
else
  hashfunc="mkpasswd -m $algo -s"
fi

printf %s "$password" | $hashfunc | sudo bash -c "umask 0377; cat > $output"
